#!/bin/bash

PRMPT_ITEMS="${PRMPT_ITEMS:-userhost cwd vcs}"

PRMPT_OPT_color="${PRMPT_OPT_color:-true}"
PRMPT_OPT_color_user="${PRMPT_OPT_color_user:-green}"
PRMPT_OPT_color_host="${PRMPT_OPT_color_host:-green}"
PRMPT_OPT_color_userhost="${PRMPT_OPT_color_userhost:-green}"
PRMPT_OPT_color_cwd="${PRMPT_OPT_color_cwd:-blue}"
PRMPT_OPT_color_end="${PRMPT_OPT_color_cwd:-green}"
PRMPT_OPT_style="${PRMPT_OPT_style:-simple}"
PRMPT_OPT_powerline="${PRMPT_OPT_powerline:-true}"

PRMPT_OPT_end=${PRMPT_OPT_end:-'$'}

function prmpt() {
  local cmd="$1"; shift

  case "$cmd" in
    set) prmpt_command_set "$@" ;;
    '') PROMPT_COMMAND='prmpt_entry' ;;
  esac
}

function prmpt_entry() {
  local item
  local text
  local color

  prmpt_reset
  PRMPT_VAR_last_item=''
  PRMPT_VAR_last_color=''

  for item in $PRMPT_ITEMS; do
    text=
    color=
    eval "$(prmpt_item "$item")"

    if [[ -z $color ]]; then
      color="$(prmpt_color_item "$item")"
    fi

    if [[ -n $text ]]; then
      prmpt_append "$(prmpt_style "$item" "$text" "$color")"
      PRMPT_VAR_last_item="$item"
      PRMPT_VAR_last_color="$color"
    fi
  done

  prmpt_append "$(prmpt_style end "$PRMPT_OPT_end")"
  unset PRMPT_VAR_last_item
}

function prmpt_reset() {
  PS1=''
}

function prmpt_append() {
  PS1="$PS1""$@"
}

function prmpt_item() {
  case "$1" in
    user    ) echo -n "text='\u'" ;;
    host    ) echo -n "text='\h'" ;;
    userhost) echo -n "text='\u@\h'" ;;
    cwd     ) echo -n "text='\w'" ;;
    vcs     ) prmpt_vcs_status_valid && echo "$(prmpt_vcs_status)" ;;
  esac
}

function prmpt_vcs_status_valid() {
  prmpt_vcs_is_git_directory && return 0
  return 1
}

function prmpt_vcs_status() {
  if prmpt_vcs_is_git_directory; then
    echo $(prmpt_vcs_git status)
  fi
}

function prmpt_vcs_is_git_directory() {
  local dir="$1"

  dir="$(cd "$dir"; pwd)"

  if [[ -d "$dir/.git" ]]; then
    return 0
  fi

  if [[ $dir != / ]]; then
    prmpt_vcs_is_git_directory "$(dirname "$dir")"
    return $?
  fi

  return 1
}

function prmpt_vcs_git() {
  local type="$1"

  case "$type" in
    status) echo "text='$(git rev-parse --abbrev-ref HEAD)'" ;;
  esac

  if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
    echo 'color=red'
  else
    echo 'color=green'
  fi
}

function prmpt_style() {
  "prmpt_style_${PRMPT_OPT_style}" "$@"
}

function prmpt_style_simple() {
  local item="$1"
  local value="$2"
  local color="$3"
  local prefix=''
  local suffix=''

  case "$PRMPT_VAR_last_item>$item" in
    'user>host'    ) prefix='@' ;;
    'host>user'    ) prefix='/' ;;
    'host>cwd'     ) prefix=':' ;;
    'userhost>cwd' ) prefix=':' ;;
    *'>end'        ) prefix=' '; suffix=' ' ;;
    *'>vcs'        ) prefix=' ('; suffix=')' ;;
    '>'*           ) ;;
    *              ) prefix=' ' ;;
  esac

  echo -n "${prefix}$(prmpt_color fg "$color" +bold commit)"
  echo -n "${value}$(prmpt_color reset commit)${suffix}"
}

function prmpt_style_bracket() {
  local item="$1"
  local value="$2"
  local color="$3"

  if [[ $item == end ]]; then
    prmpt_color fg "$color"
    echo -n " $value "
    prmpt_color reset
  else
    echo -n "[$(prmpt_color fg "$color" +bold commit)"
    echo -n "$value$(prmpt_color reset commit)]"
  fi
}

function prmpt_style_stripe() {
  local item="$1"
  local value="$2"
  local color="$3"

  if $PRMPT_OPT_powerline; then
    prmpt_style_stripe_arrow "$item" "$color"
  fi

  prmpt_color reset fg "$color" bg black +standout >&2

  if [[ $item == end ]]; then
    prmpt_color reset commit
    echo -n ' '
  else
    prmpt_color commit
    echo -n " $2 "
  fi
}

function prmpt_style_stripe_arrow() {
  local item="$1"
  local color="$2"
  local arrow="\xee\x82\xb0"

  if [[ -n $PRMPT_VAR_last_item ]]; then
    prmpt_color reset fg "$PRMPT_VAR_last_color"

    if [[ $item != end ]]; then
      prmpt_color bg "$color" "$item"
    else
      prmpt_color bg black
    fi

    prmpt_color -standout commit
    echo -ne "${arrow}"
  fi
}

function prmpt_color_item() {
  local item="$1"
  local var_name="PRMPT_OPT_color_$item"

  echo "${!var_name}"
}

function prmpt_color() {
  while [[ $# -gt 0 ]]; do
    case "$1" in
      +bold) prmpt_setopt PRMPT_COLOR +bold ;;
      -bold) prmpt_setopt PRMPT_COLOR -bold ;;
      +standout) prmpt_setopt PRMPT_COLOR +standout ;;
      -standout) prmpt_setopt PRMPT_COLOR -standout ;;
      fg)
        shift
        PRMPT_COLOR_fg="$(prmpt_color_code "$1")"
        ;;
      bg)
        shift
        PRMPT_COLOR_bg="$(prmpt_color_code "$1")"
        ;;
      reset)
        PRMPT_COLOR_fg=
        PRMPT_COLOR_bg=
        PRMPT_COLOR_bold=false
        PRMPT_COLOR_standout=false
        ;;
      commit)
        echo -ne "\["
        tput sgr0
        [[ $PRMPT_COLOR_fg ]] && tput setaf "${PRMPT_COLOR_fg}"
        [[ $PRMPT_COLOR_bg ]] && tput setab "${PRMPT_COLOR_bg}"
        ${PRMPT_COLOR_bold:-false} && tput bold
        ${PRMPT_COLOR_standout:-false} && tput smso
        echo -ne "\]"
        ;;
    esac

    shift
  done
}

function prmpt_command_set() {
  while [[ $# -gt 0 ]]; do
    prmpt_setopt PRMPT_OPT "$1"
    shift
  done
}

function prmpt_setopt() {
  local prefix="$1"
  local def="$2"
  local var_name
  local var_value

  if [[ ${def:0:1} == '+' || ${def:0:1} == '-' ]]; then
    var_name="${def:1}"
    [[ ${def:0:1} == '+' ]] && var_value=true || var_value=false
  else
    var_name="$(echo "$def" | sed -e 's/\([a-zA-Z0-9_-]\+\)=.*/\1/p; d' | tr - _)"
    var_value="$(echo "$def" | sed -e 's/[^=]\+=\(.*\)/\1/')"
  fi

  eval "${prefix}_${var_name}='$var_value'"
}

function prmpt_color_code() {
  case "$1" in
    black  ) echo ;;
    red    ) echo 1 ;;
    green  ) echo 2 ;;
    yellow ) echo 3 ;;
    blue   ) echo 4 ;;
    magenta) echo 5 ;;
    yellow ) echo 6 ;;
    white|*) echo 7 ;;
  esac
}
